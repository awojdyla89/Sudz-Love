{"version":3,"sources":["components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/PageHeader/PageHeader.jsx","components/AddBeerForm/AddBeerForm.jsx","components/BeerCard/BeerCard.jsx","components/BeerFeed/BeerFeed.jsx","utils/postApi.js","utils/votesApi.js","pages/MainPage/MainPage.jsx","components/ProfileBio/ProfileBio.jsx","pages/ProfilePage/ProfilePage.jsx","pages/HomePage/HomePage.jsx","pages/SearchPage/SearchPage.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["ErrorMessage","props","className","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","signup","fetch","method","body","then","res","ok","json","Error","tokenService","logout","login","creds","headers","Headers","stringify","getUser","getProfile","username","Authorization","SignUpPage","useState","selectedFile","setSelectedFile","loading","setLoading","setError","email","password","passwordConf","beerbio","state","setState","history","useHistory","e","a","fieldName","preventDefault","formData","FormData","append","console","log","forEach","item","userService","handleSignUpOrLogin","push","message","handleChange","target","name","value","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Image","src","Form","autoComplete","onSubmit","Dimmer","active","Loader","size","inline","Segment","stacked","Input","placeholder","onChange","required","type","TextArea","label","Field","files","Button","Message","to","LoginPage","fluid","PageHeader","handleLogout","Menu","secondary","pointing","Item","Link","inverted","Icon","position","fontSize","fontFamily","textShadow","fontWeight","primary","onClick","AddBeerForm","favBeer","abv","beerType","postedDate","aboutBeer","today","handleAddPost","BeerCard","post","isProfile","addVote","removeVote","deletePost","voted","votes","findIndex","vote","clickHandler","_id","voteColor","posted","Card","Content","floated","avatar","bordered","photoUrl","Description","toLocaleDateString","wrapped","ui","extra","length","BeerFeed","posts","photowidth","Group","itemsPerRow","stackable","map","create","getAll","removePost","id","postID","likeID","MainPage","setPosts","postsAPI","data","getPosts","postId","votesAPI","useEffect","centered","Row","class","overflow","maxHeight","ProfileBio","ProfilePage","profileUser","setProfileUser","useParams","columns","paddingLeft","HomePage","width","brewHouses","setBrewHouses","userInput","setUserInput","stateInput","setStateInput","cityInput","setCityInput","formatPhoneNumber","phoneNumber","match","replace","padding","catch","alert","brewery","backgroundColor","borderRadius","Meta","street","city","postal_code","phone","href","website_url","App","setUser","backgroundImage","minHeight","backgroundSize","exact","path","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52c5292b.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function ErrorMessage(props) {\n  return <span className={\"error\"}>{props.error}</span>;\n}\n","function setToken(token) {\n  if (token) {\n    // localStorage is given to us by the browser\n    localStorage.setItem(\"token\", token);\n  } else {\n    localStorage.removeItem(\"token\");\n  }\n}\n\nfunction getToken() {\n  let token = localStorage.getItem(\"token\");\n  if (token) {\n    // Check if expired, remove if it is\n    // atob is a function that decodes a base-64 string\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"token\");\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split(\".\")[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem(\"token\");\n}\n\nexport default {\n  setToken,\n  getToken,\n  removeToken,\n  getUserFromToken,\n};\n","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/users/\";\n\n// NOTE THIS IS configured to send of a multi/part form request\n// aka photo\nfunction signup(user) {\n  return (\n    fetch(BASE_URL + \"signup\", {\n      method: \"POST\",\n      body: user,\n    })\n      .then((res) => {\n        if (res.ok) return res.json();\n        // Probably a duplicate email\n        throw new Error(\"Email already taken!\");\n      })\n      // Parameter destructuring!\n      .then(({ token }) => tokenService.setToken(token))\n  );\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + \"login\", {\n    method: \"POST\",\n    headers: new Headers({ \"Content-Type\": \"application/json\" }),\n    body: JSON.stringify(creds),\n  })\n    .then((res) => {\n      // Valid login if we have a status of 2xx (res.ok)\n      if (res.ok) return res.json();\n      throw new Error(\"Bad Credentials!\");\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nfunction getProfile(username) {\n  return fetch(BASE_URL + username, {\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    throw new Error(\"Bad Credentials!\");\n  });\n}\n\nexport default {\n  signup,\n  logout,\n  login,\n  getUser,\n  getProfile,\n};\n","import React, { useState } from \"react\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Segment,\n  Message,\n  Dimmer,\n  Loader,\n} from \"semantic-ui-react\";\nimport userService from \"../../utils/userService\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport \"./SignupPage.css\";\n\nexport default function SignUpPage(props) {\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConf: \"\",\n    beerbio: \"\",\n  });\n\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    setLoading(true);\n\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"photo\", selectedFile);\n\n    for (let fieldName in state) {\n      //console.log(fieldName, state[fieldName]);\n      // append the rest of the data to the form obejct\n      formData.append(fieldName, state[fieldName]);\n    }\n\n    try {\n      console.log(formData.forEach((item) => console.log(item)));\n\n      // use the userService to make the fetch request\n      await userService.signup(formData);\n\n      // Route to wherever you want!\n      // after you get a response from the server from\n      // the signup request, you need to grab the token from\n      // local storage and set the user!\n      props.handleSignUpOrLogin();\n      history.push(\"/\");\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      console.log(err.message);\n      setError(err.message);\n    }\n    setLoading(false);\n  }\n\n  function handleFileInput(e) {\n    //console.log(\"BIO Photo File:-->\", e.target.files)\n    setSelectedFile(e.target.files[0]);\n  }\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"orange\" textAlign=\"center\">\n            <Image src=\"beerlogo.png\" /> Sign Up!\n          </Header>\n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            {loading ? (\n              <div>\n                <Dimmer active>\n                  <Loader size=\"big\" active inline=\"centered\">\n                    Creating User...\n                  </Loader>\n                </Dimmer>\n                <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n              </div>\n            ) : null}\n\n            <Segment className=\"signupPage\" stacked>\n              <Form.Input\n                name=\"username\"\n                placeholder=\"username\"\n                value={state.username}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={state.email}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={state.password}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"passwordConf\"\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                value={state.passwordConf}\n                onChange={handleChange}\n                required\n              />\n              <Form.TextArea\n                label=\"List Favorite Beers here...\"\n                placeholder=\"My Favorite beer is...\"\n                name=\"beerbio\"\n                onChange={handleChange}\n              />\n              <Form.Field>\n                <Form.Input\n                  type=\"file\"\n                  name=\"photo\"\n                  placeholder=\"upload image\"\n                  onChange={handleFileInput}\n                  required\n                />\n              </Form.Field>\n              <Button type=\"submit\" className=\"btn\" color=\"orange\">\n                Signup\n              </Button>\n            </Segment>\n            <Message className=\"signupLink\">\n              Already Have An Account? &nbsp;&nbsp;&nbsp;{\" \"}\n              <Link to=\"/login\" className=\"link\">\n                Log In\n              </Link>\n            </Message>\n\n            {error ? <ErrorMessage error={error} /> : null}\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n  Dimmer,\n  Loader,\n} from \"semantic-ui-react\";\n\nexport default function LoginPage(props) {\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const history = useHistory();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    setLoading(true);\n    e.preventDefault();\n\n    try {\n      await userService.login(state);\n      props.handleSignUpOrLogin();\n      history.push(\"/\");\n    } catch (err) {\n      setError(err.message);\n    }\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"orange\" textAlign=\"center\">\n            <Image src=\"beerlogo.png\" /> Log-in to your account\n          </Header>\n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            {loading ? (\n              <div>\n                <Dimmer active>\n                  <Loader size=\"large\" active inline=\"centered\">\n                    Signing In...\n                  </Loader>\n                </Dimmer>\n                <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n              </div>\n            ) : null}\n\n            <Segment stacked className=\"loginPage\">\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={state.email}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={state.password}\n                onChange={handleChange}\n                required\n              />\n              <Button\n                color=\"orange\"\n                fluid\n                size=\"large\"\n                type=\"submit\"\n                className=\"btn\"\n              >\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message className=\"signupLink\">\n            New to Sudz Love? &nbsp;&nbsp;&nbsp;{\" \"}\n            <Link to=\"/signup\" className=\"link\">\n              Sign Up\n            </Link>\n          </Message>\n          {error ? <ErrorMessage error={error} /> : null}\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Icon, Menu, Button } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport \"./PageHeader.css\";\n\nexport default function PageHeader({ user, handleLogout }) {\n  return (\n    <Menu secondary pointing className=\"headerStyle\">\n      <Menu.Item>\n        <Button as={Link} to={`/${user.username}`} inverted color=\"yellow\">\n          <Icon name=\"user circle\"></Icon>\n          {user.username}'s Profile\n        </Button>\n      </Menu.Item>\n\n      <Menu.Item>\n        <Button as={Link} to=\"/\" inverted color=\"orange\">\n          <Icon name=\"home\"></Icon>\n          Home\n        </Button>\n      </Menu.Item>\n\n      <Menu.Item\n        position=\"right\"\n        style={{\n          fontSize: 51,\n          fontFamily: \"Chalkduster, fantasy\",\n          textShadow: \"-1px 1px 2px orange\",\n          fontWeight: 600,\n        }}\n      >\n        Sudz Love\n      </Menu.Item>\n\n      <Menu.Item position=\"right\">\n        <Button as={Link} to=\"/main\" primary inverted color=\"blue\">\n          <Icon name=\"add\"></Icon>\n          Beer Feed\n        </Button>\n      </Menu.Item>\n\n      <Menu.Item>\n        <Button as={Link} to=\"/search\" inverted color=\"green\">\n          <Icon name=\"search\"></Icon>\n          Brewery Search\n        </Button>\n      </Menu.Item>\n\n      <Menu.Item>\n        {\" \"}\n        <Button onClick={handleLogout} inverted color=\"red\">\n          <Icon name=\"log out\"></Icon>\n          Logout\n        </Button>\n      </Menu.Item>\n    </Menu>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Segment,\n  Dimmer,\n  Loader,\n  Image,\n} from \"semantic-ui-react\";\nimport \"./AddBeerForm.css\";\n\nexport default function AddBeerForm(props) {\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [state, setState] = useState({\n    favBeer: \"\",\n    abv: \"\",\n    beerType: \"\",\n    postedDate: \"\",\n    aboutBeer: \"\",\n  });\n\n  function handleFileInput(e) {\n    setSelectedFile(e.target.files[0]);\n  }\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    let today = new Date();\n    state.postedDate = today;\n\n    const formData = new FormData();\n    formData.append(\"photo\", selectedFile);\n    formData.append(\"favBeer\", state.favBeer);\n    formData.append(\"abv\", state.abv);\n    formData.append(\"beerType\", state.beerType);\n    formData.append(\"postedDate\", state.postedDate);\n    formData.append(\"aboutBeer\", state.aboutBeer);\n\n    props.handleAddPost(formData); // calling our function!\n    // Have to submit the form now! We need a function!\n  }\n\n  return (\n    <Grid textAlign=\"center\" style={{ height: \"25vh\" }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Segment className=\"beerform\">\n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            {props.loading ? (\n              <div>\n                <Dimmer active>\n                  <Loader size=\"medium\" active inline=\"centered\">\n                    Adding Post...\n                  </Loader>\n                </Dimmer>\n                <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n              </div>\n            ) : null}\n\n            <Form.Input\n              className=\"form-control\"\n              name=\"favBeer\"\n              value={state.favBeer}\n              placeholder=\"What's the name of the Beer?\"\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              className=\"form-control\"\n              name=\"abv\"\n              value={state.abv}\n              placeholder=\"Alcohol %?\"\n              onChange={handleChange}\n              required\n            />\n\n            <Form.Input\n              className=\"form-control\"\n              name=\"beerType\"\n              value={state.beerType}\n              placeholder=\"Beer Family.\"\n              onChange={handleChange}\n              required\n            />\n\n            <Form.Input\n              className=\"form-control\"\n              name=\"aboutBeer\"\n              value={state.aboutBeer}\n              placeholder=\"Tell us about the beer.\"\n              onChange={handleChange}\n              required\n            />\n\n            <Form.Input\n              className=\"form-control\"\n              type=\"file\"\n              name=\"photo\"\n              placeholder=\"upload image\"\n              onChange={handleFileInput}\n            />\n            <Button\n              type=\"submit\"\n              className=\"btn\"\n              color=\"orange\"\n              name=\"postedDate\"\n              value={state.postedDate}\n              onChange={handleChange}\n            >\n              ADD BEER\n            </Button>\n          </Form>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { Card, Icon, Image, Button } from \"semantic-ui-react\";\nimport \"./BeerCard.css\";\n\nfunction BeerCard({ post, isProfile, user, addVote, removeVote, deletePost }) {\n    \n  const voted = post.votes.findIndex((vote) => vote.username === user.username);\n\n  const clickHandler =\n    voted > -1\n      ? () => removeVote(post.votes[voted]._id)\n      : () => addVote(post._id);\n\n  const voteColor = voted > -1 ? \"orange\" : \"grey\";\n\n  const posted = post.user.username === user.username;\n\n  const delPostHandler = () => deletePost(post._id);\n\n  return (\n    <Card key={post._id} className=\"beerCard\">\n      {isProfile ? (\n        \"\"\n      ) : (\n        <Card.Content textAlign=\"left\">\n          <Image\n            floated=\"left\"\n            size=\"medium\"\n            avatar\n            bordered\n            src={post.user.photoUrl ? post.user.photoUrl : \"favicon.ico\"}\n          />\n          <Card.Header\n            style={{ color: \"white\", fontSize: \"25px\" }}\n            floated=\"right\"\n          >\n            {post.user.username}\n          </Card.Header>\n          <Card.Description floated=\"right\">\n            Posted on {new Date(post.postedDate).toLocaleDateString()}\n          </Card.Description>\n        </Card.Content>\n      )}\n\n      <Image src={`${post.photoUrl}`} wrapped ui={false} />\n\n      <Card.Content>\n        <Card.Description style={{ color: \"white\" }} textAlign=\"left\">\n          <b> Beer Name:</b> {post.favBeer} <br />\n          <b>ABV:</b> {post.abv}% <br />\n          <b>Beer Family:</b> {post.beerType} <br />\n          <b>About:</b> {post.aboutBeer}\n        </Card.Description>\n      </Card.Content>\n      <Card.Content style={{ color: \"white\" }} extra textAlign={\"left\"}>\n        Buzz Count{\" \"}\n        <Icon\n          name={\"beer\"}\n          size=\"large\"\n          color={voteColor}\n          onClick={clickHandler}\n        />\n        {post.votes.length}\n      </Card.Content>\n\n      {posted ? (\n        <Button color=\"red\" onClick={delPostHandler}>\n          Delete\n        </Button>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n}\n\nexport default BeerCard;\n","import React from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport BeerCard from \"../BeerCard/BeerCard\";\n\nexport default function BeerFeed({\n  posts,\n  isProfile,\n  photowidth,\n  user,\n  addVote,\n  removeVote,\n  deletePost,\n  loading,\n}) {\n  return (\n    <Card.Group itemsPerRow={photowidth} stackable>\n      {posts.map((post) => {\n        return (\n          <BeerCard\n            key={post._id}\n            post={post}\n            user={user}\n            photowidth={2}\n            addVote={addVote}\n            removeVote={removeVote}\n            deletePost={deletePost}\n            isProfile={isProfile}\n            loading={loading}\n          />\n        );\n      })}\n    </Card.Group>\n  );\n}\n","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/posts\";\n\nexport function create(post) {\n  return fetch(BASE_URL, {\n    method: \"POST\",\n    body: post,\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => res.json());\n}\n\nexport function getAll() {\n  return fetch(BASE_URL, {\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => res.json());\n}\n\nexport function removePost(id) {\n  return fetch(`${BASE_URL}/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => res.json());\n}\n","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/\";\n\nexport function create(postID) {\n  return fetch(`${BASE_URL}posts/${postID}/votes`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    new Error(\"Error voting Post\");\n  });\n}\n\nexport function removeVote(likeID) {\n  return fetch(`${BASE_URL}votes/${likeID}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    new Error(\"Error voting Post\");\n  });\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\nimport AddBeerForm from \"../../components/AddBeerForm/AddBeerForm\";\nimport BeerFeed from \"../../components/BeerFeed/BeerFeed\";\nimport * as postsAPI from \"../../utils/postApi\";\nimport * as votesAPI from \"../../utils/votesApi\";\n\nexport default function MainPage({ user, handleLogout }) {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  async function handleAddPost(post) {\n    //console.log(post);\n    setLoading(true);\n    const data = await postsAPI.create(post);\n    //console.log(data.post, ' This is new BEER', data, ' data variable')\n    setPosts((posts) => [data.post, ...posts]);\n    setLoading(false);\n  }\n\n  async function getPosts() {\n    try {\n      const data = await postsAPI.getAll();\n      setPosts([...data.posts]);\n    } catch (err) {\n      console.log(err, \" this is the error\");\n    }\n  }\n\n  async function addVote(postId) {\n    try {\n      const data = await votesAPI.create(postId);\n      console.log(data, \" this is from addVote() Mainpage\");\n      getPosts();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function removeVote(likeID) {\n    try {\n      const data = await votesAPI.removeVote(likeID);\n      getPosts();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function deletePost(postId) {\n    try {\n      await postsAPI.removePost(postId);\n      getPosts();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return (\n    <Grid centered>\n      <Grid.Row>\n        <Grid.Column>\n          <PageHeader handleLogout={handleLogout} user={user} />\n        </Grid.Column>\n      </Grid.Row>\n\n      <div class=\"five wide column\">\n        <div class=\"five wide column\">\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <AddBeerForm handleAddPost={handleAddPost} loading={loading} />\n          </Grid.Column>\n        </div>\n      </div>\n\n      <div>\n        <Grid.Column\n          style={{ maxWidth: 750, overflow: \"auto\", maxHeight: 900 }}\n        >\n          <BeerFeed\n            posts={posts}\n            user={user}\n            photowidth={3}\n            addVote={addVote}\n            removeVote={removeVote}\n            loading={loading}\n            isProfile={false}\n            deletePost={deletePost}\n          />\n        </Grid.Column>\n      </div>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { Image, Grid, Segment } from \"semantic-ui-react\";\nimport \"./ProfileBio.css\";\n\nfunction ProfileBio({ user }) {\n  return (\n    <Grid>\n      <Grid.Row>\n        <Grid.Column\n          floated=\"right\"\n          textAlign=\"centered\"\n          style={{ maxWidth: 480 }}\n        >\n          <Segment className=\"bio\">\n            <span> \" {user.beerbio} \"</span>\n          </Segment>\n\n          <Image\n            size=\"medium\"\n            avatar\n            src={`${user.photoUrl ? user.photoUrl : \"favicon.ico\"} `}\n          />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default ProfileBio;\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport ProfileBio from \"../../components/ProfileBio/ProfileBio\";\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\nimport BeerFeed from \"../../components/BeerFeed/BeerFeed\";\nimport userService from \"../../utils/userService\";\n\nimport { useParams } from \"react-router-dom\";\nimport * as postsAPI from \"../../utils/postApi\";\nimport * as votesAPI from \"../../utils/votesApi\";\n\nexport default function ProfilePage({ user, handleLogout }) {\n  const [posts, setPosts] = useState([]);\n  const [profileUser, setProfileUser] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const { username } = useParams();\n\n  async function getProfile() {\n    try {\n      const data = await userService.getProfile(username);\n      console.log(data, \" data\");\n\n      // data is the response from the controller function /api/users/profile\n      // go to the controller function and look at what is returned\n      // posts and user are the properties on the data object\n      setLoading(() => false);\n      setPosts(() => [...data.posts]);\n      setProfileUser(() => data.user);\n    } catch (err) {\n      console.log(err);\n      setError(\"Profile does not Exist\");\n    }\n  }\n\n  async function addVote(postId) {\n    try {\n      const data = await votesAPI.create(postId);\n      console.log(data, \" this is from addVote() Mainpage\");\n      getProfile();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function removeVote(likeID) {\n    try {\n      const data = await votesAPI.removeVote(likeID);\n      getProfile();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function deletePost(postId) {\n    try {\n      await postsAPI.removePost(postId);\n      getProfile();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  useEffect(() => {\n    getProfile();\n  }, []);\n\n  if (error) {\n    return (\n      <>\n        <PageHeader />\n        <h1>{error}</h1>\n      </>\n    );\n  }\n\n  if (loading) {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Loader size=\"large\" active>\n            Loading\n          </Loader>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n\n  return (\n    <>\n      <Grid className=\"backgroundimg\">\n        <Grid.Row>\n          <Grid.Column>\n            <PageHeader user={user} handleLogout={handleLogout} />\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row columns={2}>\n          <div>\n            <Grid.Column\n              style={{\n                paddingLeft: \"40px\",\n                maxWidth: 650,\n                overflow: \"auto\",\n                maxHeight: 1000,\n              }}\n            >\n              <BeerFeed\n                isProfile={true}\n                user={user}\n                posts={posts}\n                deletePost={deletePost}\n                loading={loading}\n                addVote={addVote}\n                removeVote={removeVote}\n              />\n            </Grid.Column>\n          </div>\n\n          <Grid.Column>\n            <ProfileBio user={profileUser} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </>\n  );\n}\n","import React from \"react\";\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\nimport { Grid } from \"semantic-ui-react\";\nimport \"./HomePage.css\";\n\nexport default function HomePage({ user, handleLogout }) {\n  return (\n    <div className=\"backgroundimg\">\n      <Grid>\n        <Grid.Row>\n          <Grid.Column>\n            <PageHeader user={user} handleLogout={handleLogout} />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row columns={2} className=\"homePage\">\n          <Grid.Column width={12}>\n            <h2 className=\"title\">Welcome to Sudz Love.</h2>\n            <h2 className=\"title\">\n              Post your beers or search for a local brewery!\n            </h2>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Segment,\n  Dimmer,\n  Loader,\n  Image,\n  Item\n} from \"semantic-ui-react\";\n\n\nexport default function HomePage({ user, handleLogout }) {\n  const [brewHouses, setBrewHouses] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [stateInput, setStateInput] = useState(\"\");\n  const [cityInput, setCityInput] = useState(\"\");\n\n  const getBreweriesByName = () => {\n    setLoading(true);\n    fetch(`https://api.openbrewerydb.org/breweries?by_name=${userInput}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setBrewHouses(data);\n        // console.log(\"DATA--------->>>>>>>\", data)\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(error.message);\n        alert(\"There was an error fetching the data\");\n      });\n  };\n\n  const getBreweriesByState = () => {\n    setLoading(true);\n    fetch(`https://api.openbrewerydb.org/breweries?by_state=${stateInput}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setBrewHouses(data);\n        // console.log(\"DATA--------->>>>>>>\", data)\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(error.message);\n        alert(\"There was an error fetching the data\");\n      });\n  };\n\n  const getBreweriesByCity = () => {\n    setLoading(true);\n    fetch(`https://api.openbrewerydb.org/breweries?by_city=${cityInput}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setBrewHouses(data);\n        // console.log(\"DATA--------->>>>>>>\", data)\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(error.message);\n        alert(\"There was an error fetching the data\");\n      });\n  };\n\n  function handleChange(e) {\n    setUserInput(e.target.value);\n  }\n\n  function handleState(e) {\n    setStateInput(e.target.value);\n  }\n\n  function handleCity(e) {\n    setCityInput(e.target.value);\n  }\n\n  const handleClearInputField = () => {\n    setUserInput(\"\");\n    setStateInput(\"\");\n    setCityInput(\"\");\n    setBrewHouses([]);\n  };\n\n  function formatPhoneNumber(phoneNumber) {\n    var raw = (\"\" + phoneNumber).replace(/\\D/g, \"\");\n    var match = raw.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n    if (match) {\n      return \"(\" + match[1] + \") \" + match[2] + \"-\" + match[3];\n    }\n    return null;\n  }\n\n  return (\n    <Grid centered>\n      <Grid.Row>\n        <Grid.Column>\n          <PageHeader handleLogout={handleLogout} user={user} />\n        </Grid.Column>\n      </Grid.Row>\n\n      {/* SEARCH BY BREWERY NAME */}\n      <Grid.Row columns={3} style={{ padding: \"30px\" }}>\n        <Grid.Column>\n          <Segment className=\"beerform\">\n            <Form autoComplete=\"off\">\n              {loading ? (\n                <div>\n                  <Dimmer active>\n                    <Loader size=\"medium\" active inline=\"centered\">\n                      searching breweries...\n                    </Loader>\n                  </Dimmer>\n                  <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n                </div>\n              ) : null}\n\n              <Form.Input\n                type=\"text\"\n                className=\"brewery-form\"\n                name=\"aboutBeer\"\n                value={userInput}\n                placeholder=\"Search breweries by name..\"\n                onChange={handleChange}\n                //   required\n              />\n\n              <Button\n                type=\"submit\"\n                className=\"btn\"\n                inverted\n                color=\"black\"\n                onClick={getBreweriesByName}\n              >\n                Search By Name\n              </Button>\n            </Form>\n          </Segment>\n        </Grid.Column>\n\n        {/* SEARCH BY STATE */}\n        <Grid.Column>\n          <Segment className=\"beerform\">\n            <Form autoComplete=\"off\">\n              {loading ? (\n                <div>\n                  <Dimmer active>\n                    <Loader size=\"medium\" active inline=\"centered\">\n                      searching breweries...\n                    </Loader>\n                  </Dimmer>\n                  <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n                </div>\n              ) : null}\n\n              <Form.Input\n                type=\"text\"\n                className=\"brewery-form\"\n                name=\"aboutBeer\"\n                value={stateInput}\n                placeholder=\"Search breweries by state..\"\n                onChange={handleState}\n                //   required\n              />\n\n              <Button\n                type=\"submit\"\n                className=\"btn\"\n                inverted\n                color=\"black\"\n                onClick={getBreweriesByState}\n              >\n                Search By State\n              </Button>\n            </Form>\n          </Segment>\n        </Grid.Column>\n\n        {/* SEARCH BY CITY */}\n        <Grid.Column>\n          <Segment className=\"beerform\">\n            <Form autoComplete=\"off\">\n              {loading ? (\n                <div>\n                  <Dimmer active>\n                    <Loader size=\"medium\" active inline=\"centered\">\n                      searching breweries...\n                    </Loader>\n                  </Dimmer>\n                  <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n                </div>\n              ) : null}\n\n              <Form.Input\n                type=\"text\"\n                className=\"brewery-form\"\n                name=\"aboutBeer\"\n                value={cityInput}\n                placeholder=\"Search breweries by city..\"\n                onChange={handleCity}\n                //   required\n              />\n\n              <Button\n                type=\"submit\"\n                className=\"btn\"\n                inverted\n                color=\"black\"\n                onClick={getBreweriesByCity}\n              >\n                Search By City\n              </Button>\n            </Form>\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row>\n        <Button type=\"submit\" color=\"blue\" onClick={handleClearInputField}>\n          Clear Search\n        </Button>\n      </Grid.Row>\n\n      <Grid.Row columns={2}>\n        <Grid.Column\n          style={{ maxWidth: 750, overflow: \"auto\", maxHeight: 900 }}\n        >\n          {brewHouses.map((brewery) => {\n            return (\n\n              \n              <Item.Group\n                style={{\n                  backgroundColor: \"rgba(128, 128, 128, 0.633)\",\n                  textAlign: \"center\",\n                  borderRadius: \"25px\",\n                  padding: \"13px\",\n                  \n                }}\n              >\n                <Item>\n                  <Item.Content>\n                    <Item.Header\n                      style={{ color: \"rgb(255, 192, 24)\", fontSize: \"23px\" }}\n                    >\n                      {brewery.name}\n                    </Item.Header>\n                    <Item.Meta>\n                      <span style={{color: \"ivory\"}}>\n                        <b>Address: </b> {brewery.street} <br />\n                        {brewery.city} , {brewery.state} <br />\n                        {brewery.postal_code} <br />{\" \"}\n                      </span>\n                      <span style={{color: \"ivory\"}}>\n                        <b>Phone: </b> {formatPhoneNumber(brewery.phone)}{\" \"}\n                      </span>\n                    </Item.Meta>\n                    <Item.Description>\n                      {\" \"}\n                      <a href={brewery.website_url}>\n                        <Button inverted color=\"olive\">\n                          {brewery.name} Website\n                        </Button>\n                      </a>\n                    </Item.Description>\n                  </Item.Content>\n                </Item>\n              </Item.Group>\n              \n            );\n          })}\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport userService from \"../../utils/userService\";\nimport MainPage from \"../MainPage/MainPage\";\nimport ProfilePage from \"../ProfilePage/ProfilePage\";\nimport HomePage from \"../HomePage/HomePage\";\nimport SearchPage from \"../SearchPage/SearchPage\";\nimport \"./App.css\";\n\nfunction App() {\n  const [user, setUser] = useState(userService.getUser()); // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like\n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n  function handleSignUpOrLogin() {\n    setUser(userService.getUser()); // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout() {\n    userService.logout();\n    setUser({ user: null });\n  }\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        backgroundImage: `url(/background.jpeg)`,\n        width: \"100%\",\n        minHeight: \"100vh\",\n        backgroundSize: \"cover\",\n      }}\n    >\n      <Switch>\n        <Route exact path=\"/login\">\n          <LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />\n        </Route>\n        <Route exact path=\"/signup\">\n          <SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />\n        </Route>\n        <Route path=\"/search\">\n          <SearchPage user={user} handleLogout={handleLogout} />\n        </Route>\n\n        {userService.getUser() ? (\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage user={user} handleLogout={handleLogout} />\n            </Route>\n            <Route exact path=\"/main\">\n              <MainPage user={user} handleLogout={handleLogout} />\n            </Route>\n            <Route path=\"/:username\">\n              <ProfilePage user={user} handleLogout={handleLogout} />\n            </Route>\n          </Switch>\n        ) : (\n          <Redirect to=\"/login\" />\n        )}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}